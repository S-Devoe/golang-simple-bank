basePath: /api/v1
definitions:
  api.LoginUserRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.LoginUserResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
      refresh_token:
        type: string
      refresh_token_expires_at:
        type: string
      session_id:
        type: string
      user:
        $ref: '#/definitions/api.userResponse'
    type: object
  api.createUserRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        minLength: 6
        type: string
      username:
        minLength: 3
        type: string
    required:
    - email
    - full_name
    - password
    - username
    type: object
  api.renewAccessTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  api.renewAccessTokenResponse:
    properties:
      access_token:
        type: string
      access_token_expires_at:
        type: string
    type: object
  api.userResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      password_changed_at:
        description: Omit if empty
        type: string
      username:
        type: string
    type: object
  util.Response:
    properties:
      data: {}
      error: {}
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: Simple Bank API documentation.
  title: Simple Bank API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user and return access and refresh tokens
      parameters:
      - description: Login User Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/api.LoginUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.LoginUserResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      summary: Login
      tags:
      - auth
  /signup:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: Create User Request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/api.createUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.userResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      summary: Create User
      tags:
      - auth
  /token/renew:
    post:
      consumes:
      - application/json
      description: Renew a user's access and refresh tokens
      parameters:
      - description: Request body to renew access/refresh tokens
        in: body
        name: renewRequest
        required: true
        schema:
          $ref: '#/definitions/api.renewAccessTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/util.Response'
            - properties:
                data:
                  $ref: '#/definitions/api.renewAccessTokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/util.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/util.Response'
        "404":
          description: Session Not Found
          schema:
            $ref: '#/definitions/util.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/util.Response'
      summary: Renew Access Token
      tags:
      - auth
swagger: "2.0"
